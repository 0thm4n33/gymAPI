// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using webAPi.Models;

#nullable disable

namespace webAPi.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("webAPi.Models.Abonnement", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Montant")
                        .HasColumnType("float");

                    b.Property<DateTime?>("dateDebut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dateFin")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Abonnement");
                });

            modelBuilder.Entity("webAPi.Models.Adherent", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<int?>("AbonnementId")
                        .HasColumnType("int");

                    b.Property<int>("CompteId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateNaissance")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Payement")
                        .HasColumnType("int");

                    b.Property<string>("Prenom")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AbonnementId");

                    b.HasIndex("CompteId");

                    b.ToTable("Adherent");
                });

            modelBuilder.Entity("webAPi.Models.Compte", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pwd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("comptes");
                });

            modelBuilder.Entity("webAPi.Models.Cours", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<int?>("Duree")
                        .HasColumnType("int");

                    b.Property<string>("Niveau")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.ToTable("Cours");
                });

            modelBuilder.Entity("webAPi.Models.Materiel", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<int>("Categorie")
                        .HasColumnType("int");

                    b.Property<int?>("CoursId")
                        .HasColumnType("int");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marque")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Qte")
                        .HasColumnType("int");

                    b.Property<int>("Statut")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CoursId");

                    b.ToTable("materiels");
                });

            modelBuilder.Entity("webAPi.Models.Moniteur", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<int?>("CompteId")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompteId");

                    b.ToTable("Moniteur");
                });

            modelBuilder.Entity("webAPi.Models.Notification", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<int?>("AdherentId")
                        .HasColumnType("int");

                    b.Property<string>("Contenu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdherentId");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("webAPi.Models.Service", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<int?>("AbonnementId")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AbonnementId");

                    b.ToTable("Service");
                });

            modelBuilder.Entity("webAPi.Models.Specialite", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<int?>("MoniteurId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MoniteurId");

                    b.ToTable("Specialite");
                });

            modelBuilder.Entity("webAPi.Models.Temps", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<int?>("CoursId")
                        .HasColumnType("int");

                    b.Property<DateTime>("HeureDebut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HeureFin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Jour")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CoursId");

                    b.ToTable("Temps");
                });

            modelBuilder.Entity("webAPi.Models.Adherent", b =>
                {
                    b.HasOne("webAPi.Models.Abonnement", "Abonnement")
                        .WithMany()
                        .HasForeignKey("AbonnementId");

                    b.HasOne("webAPi.Models.Compte", "Compte")
                        .WithMany()
                        .HasForeignKey("CompteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Abonnement");

                    b.Navigation("Compte");
                });

            modelBuilder.Entity("webAPi.Models.Cours", b =>
                {
                    b.HasOne("webAPi.Models.Service", null)
                        .WithMany("cours")
                        .HasForeignKey("ServiceId");
                });

            modelBuilder.Entity("webAPi.Models.Materiel", b =>
                {
                    b.HasOne("webAPi.Models.Cours", null)
                        .WithMany("Materiels")
                        .HasForeignKey("CoursId");
                });

            modelBuilder.Entity("webAPi.Models.Moniteur", b =>
                {
                    b.HasOne("webAPi.Models.Compte", "Compte")
                        .WithMany()
                        .HasForeignKey("CompteId");

                    b.Navigation("Compte");
                });

            modelBuilder.Entity("webAPi.Models.Notification", b =>
                {
                    b.HasOne("webAPi.Models.Adherent", null)
                        .WithMany("Notifications")
                        .HasForeignKey("AdherentId");
                });

            modelBuilder.Entity("webAPi.Models.Service", b =>
                {
                    b.HasOne("webAPi.Models.Abonnement", null)
                        .WithMany("Services")
                        .HasForeignKey("AbonnementId");
                });

            modelBuilder.Entity("webAPi.Models.Specialite", b =>
                {
                    b.HasOne("webAPi.Models.Moniteur", null)
                        .WithMany("Specialites")
                        .HasForeignKey("MoniteurId");
                });

            modelBuilder.Entity("webAPi.Models.Temps", b =>
                {
                    b.HasOne("webAPi.Models.Cours", null)
                        .WithMany("EmploiTemps")
                        .HasForeignKey("CoursId");
                });

            modelBuilder.Entity("webAPi.Models.Abonnement", b =>
                {
                    b.Navigation("Services");
                });

            modelBuilder.Entity("webAPi.Models.Adherent", b =>
                {
                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("webAPi.Models.Cours", b =>
                {
                    b.Navigation("EmploiTemps");

                    b.Navigation("Materiels");
                });

            modelBuilder.Entity("webAPi.Models.Moniteur", b =>
                {
                    b.Navigation("Specialites");
                });

            modelBuilder.Entity("webAPi.Models.Service", b =>
                {
                    b.Navigation("cours");
                });
#pragma warning restore 612, 618
        }
    }
}
